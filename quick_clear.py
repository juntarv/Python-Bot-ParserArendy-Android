from telethon import TelegramClient
import asyncio
from config import API_ID, API_HASH, MY_CHANNEL_ID

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
client = TelegramClient('sessions/history_session', API_ID, API_HASH)

async def quick_clear_channel():
    """–ë—ã—Å—Ç—Ä–æ –æ—á–∏—â–∞–µ—Ç –∫–∞–Ω–∞–ª –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    await client.start()
    
    try:
        channel = await client.get_entity(MY_CHANNEL_ID)
        print(f"üßπ –û—á–∏—â–∞—é –∫–∞–Ω–∞–ª: {channel.title}")
        
        deleted_count = 0
        batch_size = 100
        
        while True:
            messages = []
            async for message in client.iter_messages(channel, limit=batch_size):
                messages.append(message.id)
            
            if not messages:
                break
            
            await client.delete_messages(channel, messages)
            deleted_count += len(messages)
            
            if deleted_count % 500 == 0:
                print(f"  üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
            
            await asyncio.sleep(0.5)
        
        print(f"‚úÖ –ö–∞–Ω–∞–ª –æ—á–∏—â–µ–Ω! –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
        return deleted_count
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 0
    finally:
        await client.disconnect()

if __name__ == '__main__':
    print("üßπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–∞–ª–∞...")
    asyncio.run(quick_clear_channel()) 