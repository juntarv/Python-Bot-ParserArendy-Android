#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ü§ñ RentBot - –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
–í–µ—Ä—Å–∏—è: 2.0
–ê–≤—Ç–æ—Ä: –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –æ–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
"""

import asyncio
import sys
import json
from datetime import datetime
from config import *

class RentBotMain:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞"""
    
    def __init__(self):
        self.start_time = datetime.now()
        print(f"""
{'='*60}
ü§ñ RENTBOT v2.0 - –°–ò–°–¢–ï–ú–ê –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ö–û–ù–ö–£–†–ï–ù–¢–û–í
{'='*60}
üìÖ –ó–∞–ø—É—Å–∫: {self.start_time.strftime('%d.%m.%Y %H:%M:%S')}
üîß –†–µ–∂–∏–º: –ü—Ä–æ–¥–∞–∫—à–Ω (–æ–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–æ)
üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: {len(COMPETITOR_BOTS)} –±–æ—Ç–æ–≤
üéØ –ö–∞–Ω–∞–ª: {MY_CHANNEL_ID}
{'='*60}
        """)
    
    def show_menu(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        print("""
üéØ –í–´–ë–ï–†–ò–¢–ï –î–ï–ô–°–¢–í–ò–ï:

1Ô∏è‚É£  üì° –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–æ–≤—ã–µ)
2Ô∏è‚É£  üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–∞–Ω–∞–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é  
3Ô∏è‚É£  üìä –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å Google Sheets
4Ô∏è‚É£  ‚öôÔ∏è  –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
5Ô∏è‚É£  üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
6Ô∏è‚É£  üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
7Ô∏è‚É£  üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
0Ô∏è‚É£  ‚ùå –í—ã—Ö–æ–¥

        """)
    
    async def load_history(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏"""
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏...")
        try:
            from load_history_fixed import main as load_main
            await load_main()
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
    
    async def clear_channel(self):
        """–û—á–∏—â–∞–µ—Ç –∫–∞–Ω–∞–ª"""
        print("\nüßπ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –∫–∞–Ω–∞–ª–∞...")
        try:
            from clean_channel import clear_channel_no_confirm
            deleted = await clear_channel_no_confirm()
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted} —Å–æ–æ–±—â–µ–Ω–∏–π")
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
    
    async def sync_sheets(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å Google Sheets"""
        print("\nüìä –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Google Sheets...")
        try:
            from channel_to_sheets import main as sheets_main
            await sheets_main()
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
    
    def show_config(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        print(f"""
‚öôÔ∏è  –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´:
{'='*40}
üì° API ID: {API_ID}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {PHONE}
üìä –ö–∞–Ω–∞–ª: {MY_CHANNEL_ID}

ü§ñ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –±–æ—Ç—ã ({len(COMPETITOR_BOTS)}):
""")
        for i, bot in enumerate(COMPETITOR_BOTS, 1):
            print(f"   {i}. @{bot}")
        
        print(f"""
üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
   üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: {'–í–∫–ª—é—á–µ–Ω–∞' if FILTER_BY_KEYWORDS else '–í—ã–∫–ª—é—á–µ–Ω–∞'}
   üìÖ –ò—Å—Ç–æ—Ä–∏—è: {DAYS_TO_LOAD} –¥–Ω–µ–π
   ‚è±Ô∏è  –ó–∞–¥–µ—Ä–∂–∫–∞: {DELAY_BETWEEN_MESSAGES} —Å–µ–∫
   üìä Google Sheets: {SPREADSHEET_ID}
   
üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {len(ALL_KEYWORDS)} —à—Ç.
        """)
    
    def show_stats(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        uptime = datetime.now() - self.start_time
        print(f"""
üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ê–ë–û–¢–´:
{'='*40}
‚è±Ô∏è  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}
üîß –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω
üì° –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: -
üíæ –ö—ç—à: –û—á–∏—â–µ–Ω
        """)
    
    async def real_time_monitor(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
        print("""
üîÑ –ú–û–ù–ò–¢–û–†–ò–ù–ì –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò
‚ö†Ô∏è  –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        """)
    
    async def test_mode(self):
        """–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"""
        print("""
üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú
================
–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API...
        """)
        try:
            from telethon import TelegramClient
            test_client = TelegramClient('test_session', API_ID, API_HASH)
            await test_client.start(PHONE)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
            channel = await test_client.get_entity(MY_CHANNEL_ID)
            print(f"‚úÖ –ö–∞–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω: {channel.title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–æ–≤
            for bot in COMPETITOR_BOTS[:2]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 2 –±–æ—Ç–∞
                try:
                    bot_entity = await test_client.get_entity(bot)
                    print(f"‚úÖ –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: @{bot} ({bot_entity.first_name})")
                except:
                    print(f"‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: @{bot}")
            
            await test_client.disconnect()
            print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    async def run(self):
        """–ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        while True:
            try:
                self.show_menu()
                choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-7): ").strip()
                
                if choice == '0':
                    print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
                    break
                elif choice == '1':
                    await self.load_history()
                elif choice == '2':
                    await self.clear_channel()
                elif choice == '3':
                    await self.sync_sheets()
                elif choice == '4':
                    self.show_config()
                elif choice == '5':
                    self.show_stats()
                elif choice == '6':
                    await self.real_time_monitor()
                elif choice == '7':
                    await self.test_mode()
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                
                if choice != '0':
                    input("\n‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                    
            except KeyboardInterrupt:
                print("\n\n‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                break
            except Exception as e:
                print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
                input("‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

# –û–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫
async def _0x4d41494e():
    """–û–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    _0x626f74 = RentBotMain()
    await _0x626f74.run()

if __name__ == '__main__':
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RentBot...")
    try:
        asyncio.run(_0x4d41494e())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        print(f"\nüí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 